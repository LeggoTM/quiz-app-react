[{"D:\\PROJECTS\\quiz_app\\client\\src\\index.js":"1","D:\\PROJECTS\\quiz_app\\client\\src\\pages\\HomePage.jsx":"2","D:\\PROJECTS\\quiz_app\\client\\src\\componets\\Header.jsx":"3","D:\\PROJECTS\\quiz_app\\client\\src\\pages\\LoginPage.jsx":"4","D:\\PROJECTS\\quiz_app\\client\\src\\componets\\HeaderMenu.jsx":"5","D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\LoginPage.jsx":"6","D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\HomePage.jsx":"7","D:\\PROJECTS\\quiz_app\\client\\src\\Componets\\SvgBanner.jsx":"8","D:\\PROJECTS\\quiz_app\\client\\src\\Stylings\\themes.jsx":"9","D:\\PROJECTS\\quiz_app\\client\\src\\Componets\\AppBarContent.jsx":"10","D:\\PROJECTS\\quiz_app\\client\\src\\Componets\\Header.jsx":"11","D:\\PROJECTS\\quiz_app\\client\\src\\Componets\\HeaderMenu.jsx":"12","D:\\PROJECTS\\quiz_app\\client\\src\\App.jsx":"13","D:\\PROJECTS\\quiz_app\\client\\src\\app.jsx":"14","D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\CreatePage.jsx":"15","D:\\PROJECTS\\quiz_app\\client\\src\\Data\\buttonData.jsx":"16","D:\\PROJECTS\\quiz_app\\client\\src\\Assets\\menuBG\\index.jsx":"17","D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\AboutUsPage.jsx":"18","D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\JoinPage.jsx":"19"},{"size":263,"mtime":1607604401702,"results":"20","hashOfConfig":"21"},{"size":122,"mtime":1607069313305,"results":"22","hashOfConfig":"21"},{"size":4535,"mtime":1607510223279,"results":"23","hashOfConfig":"21"},{"size":1234,"mtime":1607088376643,"results":"24","hashOfConfig":"21"},{"size":1908,"mtime":1607237766094,"results":"25","hashOfConfig":"21"},{"size":1469,"mtime":1607584170503,"results":"26","hashOfConfig":"21"},{"size":1261,"mtime":1607606144560,"results":"27","hashOfConfig":"21"},{"size":1082,"mtime":1607688186034,"results":"28","hashOfConfig":"21"},{"size":716,"mtime":1607526414149,"results":"29","hashOfConfig":"21"},{"size":3776,"mtime":1607524754437,"results":"30","hashOfConfig":"21"},{"size":1346,"mtime":1607606027450,"results":"31","hashOfConfig":"21"},{"size":10772,"mtime":1607685938426,"results":"32","hashOfConfig":"21"},{"size":1462,"mtime":1607584311082,"results":"33","hashOfConfig":"21"},{"size":1846,"mtime":1607681115304,"results":"34","hashOfConfig":"21"},{"size":9082,"mtime":1607775370544,"results":"35","hashOfConfig":"21"},{"size":354,"mtime":1607681700800,"results":"36","hashOfConfig":"21"},{"size":185,"mtime":1607682057937,"results":"37","hashOfConfig":"21"},{"size":127,"mtime":1607680776225,"results":"38","hashOfConfig":"21"},{"size":121,"mtime":1607680784656,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17i07mq",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROJECTS\\quiz_app\\client\\src\\index.js",[],"D:\\PROJECTS\\quiz_app\\client\\src\\pages\\HomePage.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\componets\\Header.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\pages\\LoginPage.jsx",[],["83","84"],"D:\\PROJECTS\\quiz_app\\client\\src\\componets\\HeaderMenu.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\LoginPage.jsx",[],["85","86"],"D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\HomePage.jsx",[],["87","88"],"D:\\PROJECTS\\quiz_app\\client\\src\\Componets\\SvgBanner.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\Stylings\\themes.jsx",[],["89","90"],"D:\\PROJECTS\\quiz_app\\client\\src\\Componets\\AppBarContent.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\Componets\\Header.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\Componets\\HeaderMenu.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\App.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\app.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\CreatePage.jsx",["91","92","93","94"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n    makeStyles,\r\n    TextField,\r\n    Button,\r\n    ButtonGroup,\r\n    Paper,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Checkbox,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    createPageMaindiv: {\r\n        width: \"100%\",\r\n        padding: \"150px 100px\",\r\n    },\r\n    createPagePaper: {\r\n        background: theme.palette.secondary.main,\r\n        padding: \"20px\",\r\n    },\r\n    upperMargin: { marginTop: \"20px\" },\r\n}));\r\n\r\nconst CreatePage = () => {\r\n    const classes = useStyles();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n\r\n    const [testName, setTestName] = useState(\"\");\r\n    const [testNumberOfQuestions, setTestNumberOfQuestions] = useState(0);\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <>\r\n                        <TextField\r\n                            className={classes.upperMargin}\r\n                            variant='outlined'\r\n                            label='Enter Name Of The Test'\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            className={classes.upperMargin}\r\n                            variant='outlined'\r\n                            label='Enter Numebr Of Questions'\r\n                            fullWidth\r\n                            type='number'\r\n                        />\r\n                    </>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <>\r\n                        <TextField\r\n                            className={classes.upperMargin}\r\n                            variant='outlined'\r\n                            label='Enter Qustion'\r\n                            fullWidth\r\n                        />\r\n                        <Paper>\r\n                            <TextField\r\n                                variant='filled'\r\n                                label='Enter Option'></TextField>\r\n                            <Checkbox size='large' />\r\n                        </Paper>\r\n                        <Paper>\r\n                            <TextField variant='filled' label='Enter Option' />\r\n                            <Checkbox size='large' />\r\n                        </Paper>\r\n                        <Paper>\r\n                            <TextField variant='filled' label='Enter Option' />\r\n                            <Checkbox size='large' />\r\n                        </Paper>\r\n                        <Paper>\r\n                            <TextField variant='filled' label='Enter Option' />\r\n                            <Checkbox size='large' />\r\n                        </Paper>\r\n                    </>\r\n                );\r\n            case 2:\r\n                return \"This is the bit I really care about!\";\r\n            default:\r\n                return \"Unknown step\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.createPageMaindiv}>\r\n            <Stepper activeStep={activeStep}>\r\n                <Step>\r\n                    <StepLabel>Hello</StepLabel>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Hello</StepLabel>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Hello</StepLabel>\r\n                </Step>\r\n            </Stepper>\r\n            <Paper className={classes.createPagePaper}>\r\n                {getStepContent(activeStep)}\r\n                <ButtonGroup>\r\n                    <Button\r\n                        className={classes.upperMargin}\r\n                        onClick={() => setActiveStep(activeStep - 1)}\r\n                        disabled={activeStep === 0}\r\n                        size='large'\r\n                        color='primary'\r\n                        variant='contained'>\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        className={classes.upperMargin}\r\n                        onClick={() => setActiveStep(activeStep + 1)}\r\n                        disabled={activeStep === 2}\r\n                        size='large'\r\n                        color='primary'\r\n                        variant='contained'>\r\n                        Next\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Paper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePage;\r\n\r\n// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Stepper from '@material-ui/core/Stepper';\r\n// import Step from '@material-ui/core/Step';\r\n// import StepLabel from '@material-ui/core/StepLabel';\r\n// import Button from '@material-ui/core/Button';\r\n// import Typography from '@material-ui/core/Typography';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: '100%',\r\n//   },\r\n//   button: {\r\n//     marginRight: theme.spacing(1),\r\n//   },\r\n//   instructions: {\r\n//     marginTop: theme.spacing(1),\r\n//     marginBottom: theme.spacing(1),\r\n//   },\r\n// }));\r\n\r\n// function getSteps() {\r\n//   return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n// }\r\n\r\n// function getStepContent(step) {\r\n//   switch (step) {\r\n//     case 0:\r\n//       return 'Select campaign settings...';\r\n//     case 1:\r\n//       return 'What is an ad group anyways?';\r\n//     case 2:\r\n//       return 'This is the bit I really care about!';\r\n//     default:\r\n//       return 'Unknown step';\r\n//   }\r\n// }\r\n\r\n// export default function HorizontalLinearStepper() {\r\n//   const classes = useStyles();\r\n//   const [activeStep, setActiveStep] = React.useState(0);\r\n//   const [skipped, setSkipped] = React.useState(new Set());\r\n//   const steps = getSteps();\r\n\r\n//   const isStepOptional = (step) => {\r\n//     return step === 1;\r\n//   };\r\n\r\n//   const isStepSkipped = (step) => {\r\n//     return skipped.has(step);\r\n//   };\r\n\r\n//   const handleNext = () => {\r\n//     let newSkipped = skipped;\r\n//     if (isStepSkipped(activeStep)) {\r\n//       newSkipped = new Set(newSkipped.values());\r\n//       newSkipped.delete(activeStep);\r\n//     }\r\n\r\n//     setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n//     setSkipped(newSkipped);\r\n//   };\r\n\r\n//   const handleBack = () => {\r\n//     setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n//   };\r\n\r\n//   const handleSkip = () => {\r\n//     if (!isStepOptional(activeStep)) {\r\n//       // You probably want to guard against something like this,\r\n//       // it should never occur unless someone's actively trying to break something.\r\n//       throw new Error(\"You can't skip a step that isn't optional.\");\r\n//     }\r\n\r\n//     setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n//     setSkipped((prevSkipped) => {\r\n//       const newSkipped = new Set(prevSkipped.values());\r\n//       newSkipped.add(activeStep);\r\n//       return newSkipped;\r\n//     });\r\n//   };\r\n\r\n//   const handleReset = () => {\r\n//     setActiveStep(0);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Stepper activeStep={activeStep}>\r\n//         {steps.map((label, index) => {\r\n//           const stepProps = {};\r\n//           const labelProps = {};\r\n//           if (isStepOptional(index)) {\r\n//             labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n//           }\r\n//           if (isStepSkipped(index)) {\r\n//             stepProps.completed = false;\r\n//           }\r\n//           return (\r\n//             <Step key={label} {...stepProps}>\r\n//               <StepLabel {...labelProps}>{label}</StepLabel>\r\n//             </Step>\r\n//           );\r\n//         })}\r\n//       </Stepper>\r\n//       <div>\r\n//         {activeStep === steps.length ? (\r\n//           <div>\r\n//             <Typography className={classes.instructions}>\r\n//               All steps completed - you&apos;re finished\r\n//             </Typography>\r\n//             <Button onClick={handleReset} className={classes.button}>\r\n//               Reset\r\n//             </Button>\r\n//           </div>\r\n//         ) : (\r\n//           <div>\r\n//             <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n//             <div>\r\n//               <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n//                 Back\r\n//               </Button>\r\n//               {isStepOptional(activeStep) && (\r\n//                 <Button\r\n//                   variant=\"contained\"\r\n//                   color=\"primary\"\r\n//                   onClick={handleSkip}\r\n//                   className={classes.button}\r\n//                 >\r\n//                   Skip\r\n//                 </Button>\r\n//               )}\r\n\r\n//               <Button\r\n//                 variant=\"contained\"\r\n//                 color=\"primary\"\r\n//                 onClick={handleNext}\r\n//                 className={classes.button}\r\n//               >\r\n//                 {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n//               </Button>\r\n//             </div>\r\n//           </div>\r\n","D:\\PROJECTS\\quiz_app\\client\\src\\Data\\buttonData.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\Assets\\menuBG\\index.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\AboutUsPage.jsx",[],"D:\\PROJECTS\\quiz_app\\client\\src\\Pages\\JoinPage.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"95","replacedBy":"101"},{"ruleId":"97","replacedBy":"102"},{"ruleId":"95","replacedBy":"103"},{"ruleId":"97","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":32,"column":12,"nodeType":"107","messageId":"108","endLine":32,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":32,"column":22,"nodeType":"107","messageId":"108","endLine":32,"endColumn":33},{"ruleId":"105","severity":1,"message":"110","line":33,"column":12,"nodeType":"107","messageId":"108","endLine":33,"endColumn":33},{"ruleId":"105","severity":1,"message":"111","line":33,"column":35,"nodeType":"107","messageId":"108","endLine":33,"endColumn":59},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],["112"],["113"],["112"],["113"],"no-unused-vars","'testName' is assigned a value but never used.","Identifier","unusedVar","'setTestName' is assigned a value but never used.","'testNumberOfQuestions' is assigned a value but never used.","'setTestNumberOfQuestions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]